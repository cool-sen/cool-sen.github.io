<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据类型 on Recording</title><link>https://cool-sen.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><description>Recent content in 数据类型 on Recording</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 17 May 2020 21:15:57 +0800</lastBuildDate><atom:link href="https://cool-sen.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>﻿Redis布隆过滤器</title><link>https://cool-sen.github.io/posts/redis-bloom-filter/</link><pubDate>Sun, 17 May 2020 21:15:57 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-bloom-filter/</guid><description>为什么用布隆过滤器 比如我们在使用新闻客户端看新闻时，它会给我们不停地推荐新的内容，它每次推荐时要去重，去掉那些已经看过的内容。问题来了，新闻</description></item><item><title>﻿Redis高级数据类型-Bitmap和HyperLogLog</title><link>https://cool-sen.github.io/posts/redis-advanced-data-types/</link><pubDate>Sat, 16 May 2020 20:18:57 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-advanced-data-types/</guid><description>位图 位图不是特殊的数据结构，它的内容其实就是普通的字符串，也就是 byte 数组。我们可以使用普通的 get/set 直接获取和设置整个位图的内容，也可以使用位图操作</description></item><item><title>﻿Redis数据类型总结</title><link>https://cool-sen.github.io/posts/redis-summary-of-data-structure/</link><pubDate>Wed, 13 May 2020 21:15:11 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-summary-of-data-structure/</guid><description>redisObject 数据结构 redisObject 是 Redis 类型系统的核心， 数据库中的每个键、值，以及 Redis 本身处理的参数， 都表示为这种数据类型。 下图展示了 redisObject 、Redis 所有数据类型、以及</description></item><item><title>﻿Redis数据结构-跳跃表</title><link>https://cool-sen.github.io/posts/redis-skiplist/</link><pubDate>Tue, 12 May 2020 22:04:17 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-skiplist/</guid><description>跳表（skiplist）是一个特殊的链表，相比一般的链表，有更高的查找效率，其效率可比拟于二叉查找树。 跳跃表来源 跳跃表在 1990 年由 William Pugh 提出，而红</description></item><item><title>﻿Redis数据结构-压缩列表</title><link>https://cool-sen.github.io/posts/redis-ziplist/</link><pubDate>Sun, 10 May 2020 16:18:57 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-ziplist/</guid><description>Redis 为了节约内存空间使用，zset 和 hash 容器对象在元素个数较少的时候，采用压缩列表 (ziplist) 进行存储。 ziplist是一个经过特殊编码的双向链表，它的设</description></item><item><title>Redis数据结构-字典</title><link>https://cool-sen.github.io/posts/redis-dict/</link><pubDate>Sat, 09 May 2020 21:14:37 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-dict/</guid><description>字典（dictionary）， 又名映射（map）或关联数组（associative array）是一种抽象数据结构， 由一集键值对（key-va</description></item><item><title>﻿Redis数据结构-简单动态字符串</title><link>https://cool-sen.github.io/posts/redis-expire/</link><pubDate>Fri, 08 May 2020 19:38:57 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-expire/</guid><description>过期策略 Redis 使用的过期键删除策略是惰性删除加上定期删除 redis 会将每个设置了过期时间的 key 放入到一个独立的字典中，以后会定时遍历这个字典来删除到期的 k</description></item><item><title>﻿Redis数据结构-简单动态字符串</title><link>https://cool-sen.github.io/posts/redis-sds/</link><pubDate>Fri, 08 May 2020 19:38:57 +0800</pubDate><guid>https://cool-sen.github.io/posts/redis-sds/</guid><description>Sds （Simple Dynamic String，简单动态字符串）是 Redis 底层所使用的字符串表示， 几乎所有的 Redis 模块中都用了 sds。 sds 的用途 Sds 在 Redis 中的主要作用有以下</description></item></channel></rss>